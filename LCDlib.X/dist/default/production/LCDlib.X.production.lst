

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Sep 01 10:06:16 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1939
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Generated 06/07/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F1939 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     008C                     	;# 
    87     008D                     	;# 
    88     008E                     	;# 
    89     008F                     	;# 
    90     0090                     	;# 
    91     0091                     	;# 
    92     0092                     	;# 
    93     0093                     	;# 
    94     0095                     	;# 
    95     0096                     	;# 
    96     0097                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009A                     	;# 
   100     009B                     	;# 
   101     009B                     	;# 
   102     009C                     	;# 
   103     009D                     	;# 
   104     009E                     	;# 
   105     010C                     	;# 
   106     010D                     	;# 
   107     010E                     	;# 
   108     010F                     	;# 
   109     0110                     	;# 
   110     0111                     	;# 
   111     0112                     	;# 
   112     0113                     	;# 
   113     0114                     	;# 
   114     0115                     	;# 
   115     0116                     	;# 
   116     0117                     	;# 
   117     0118                     	;# 
   118     0119                     	;# 
   119     011A                     	;# 
   120     011B                     	;# 
   121     011D                     	;# 
   122     018C                     	;# 
   123     018D                     	;# 
   124     018F                     	;# 
   125     0190                     	;# 
   126     0191                     	;# 
   127     0191                     	;# 
   128     0192                     	;# 
   129     0193                     	;# 
   130     0193                     	;# 
   131     0193                     	;# 
   132     0194                     	;# 
   133     0195                     	;# 
   134     0196                     	;# 
   135     0199                     	;# 
   136     019A                     	;# 
   137     019B                     	;# 
   138     019B                     	;# 
   139     019B                     	;# 
   140     019B                     	;# 
   141     019C                     	;# 
   142     019C                     	;# 
   143     019D                     	;# 
   144     019E                     	;# 
   145     019F                     	;# 
   146     020D                     	;# 
   147     0210                     	;# 
   148     0211                     	;# 
   149     0212                     	;# 
   150     0213                     	;# 
   151     0214                     	;# 
   152     0215                     	;# 
   153     0215                     	;# 
   154     0216                     	;# 
   155     0217                     	;# 
   156     0291                     	;# 
   157     0291                     	;# 
   158     0292                     	;# 
   159     0293                     	;# 
   160     0294                     	;# 
   161     0295                     	;# 
   162     0295                     	;# 
   163     0296                     	;# 
   164     0298                     	;# 
   165     0298                     	;# 
   166     0299                     	;# 
   167     029A                     	;# 
   168     029B                     	;# 
   169     029C                     	;# 
   170     029C                     	;# 
   171     029D                     	;# 
   172     029E                     	;# 
   173     029F                     	;# 
   174     0311                     	;# 
   175     0311                     	;# 
   176     0312                     	;# 
   177     0313                     	;# 
   178     0314                     	;# 
   179     0315                     	;# 
   180     0315                     	;# 
   181     0316                     	;# 
   182     0318                     	;# 
   183     0318                     	;# 
   184     0319                     	;# 
   185     031A                     	;# 
   186     031C                     	;# 
   187     031C                     	;# 
   188     031D                     	;# 
   189     031E                     	;# 
   190     0394                     	;# 
   191     0395                     	;# 
   192     0396                     	;# 
   193     0415                     	;# 
   194     0416                     	;# 
   195     0417                     	;# 
   196     041C                     	;# 
   197     041D                     	;# 
   198     041E                     	;# 
   199     0791                     	;# 
   200     0792                     	;# 
   201     0793                     	;# 
   202     0794                     	;# 
   203     0795                     	;# 
   204     0798                     	;# 
   205     0799                     	;# 
   206     079A                     	;# 
   207     07A0                     	;# 
   208     07A1                     	;# 
   209     07A2                     	;# 
   210     07A3                     	;# 
   211     07A4                     	;# 
   212     07A5                     	;# 
   213     07A6                     	;# 
   214     07A7                     	;# 
   215     07A8                     	;# 
   216     07A9                     	;# 
   217     07AA                     	;# 
   218     07AB                     	;# 
   219     0FE4                     	;# 
   220     0FE5                     	;# 
   221     0FE6                     	;# 
   222     0FE7                     	;# 
   223     0FE8                     	;# 
   224     0FE9                     	;# 
   225     0FEA                     	;# 
   226     0FEB                     	;# 
   227     0FED                     	;# 
   228     0FEE                     	;# 
   229     0FEF                     	;# 
   230     0000                     	;# 
   231     0001                     	;# 
   232     0002                     	;# 
   233     0003                     	;# 
   234     0004                     	;# 
   235     0005                     	;# 
   236     0006                     	;# 
   237     0007                     	;# 
   238     0008                     	;# 
   239     0009                     	;# 
   240     000A                     	;# 
   241     000B                     	;# 
   242     000C                     	;# 
   243     000D                     	;# 
   244     000E                     	;# 
   245     000F                     	;# 
   246     0010                     	;# 
   247     0011                     	;# 
   248     0012                     	;# 
   249     0013                     	;# 
   250     0015                     	;# 
   251     0016                     	;# 
   252     0016                     	;# 
   253     0017                     	;# 
   254     0018                     	;# 
   255     0019                     	;# 
   256     001A                     	;# 
   257     001B                     	;# 
   258     001C                     	;# 
   259     001E                     	;# 
   260     001F                     	;# 
   261     008C                     	;# 
   262     008D                     	;# 
   263     008E                     	;# 
   264     008F                     	;# 
   265     0090                     	;# 
   266     0091                     	;# 
   267     0092                     	;# 
   268     0093                     	;# 
   269     0095                     	;# 
   270     0096                     	;# 
   271     0097                     	;# 
   272     0098                     	;# 
   273     0099                     	;# 
   274     009A                     	;# 
   275     009B                     	;# 
   276     009B                     	;# 
   277     009C                     	;# 
   278     009D                     	;# 
   279     009E                     	;# 
   280     010C                     	;# 
   281     010D                     	;# 
   282     010E                     	;# 
   283     010F                     	;# 
   284     0110                     	;# 
   285     0111                     	;# 
   286     0112                     	;# 
   287     0113                     	;# 
   288     0114                     	;# 
   289     0115                     	;# 
   290     0116                     	;# 
   291     0117                     	;# 
   292     0118                     	;# 
   293     0119                     	;# 
   294     011A                     	;# 
   295     011B                     	;# 
   296     011D                     	;# 
   297     018C                     	;# 
   298     018D                     	;# 
   299     018F                     	;# 
   300     0190                     	;# 
   301     0191                     	;# 
   302     0191                     	;# 
   303     0192                     	;# 
   304     0193                     	;# 
   305     0193                     	;# 
   306     0193                     	;# 
   307     0194                     	;# 
   308     0195                     	;# 
   309     0196                     	;# 
   310     0199                     	;# 
   311     019A                     	;# 
   312     019B                     	;# 
   313     019B                     	;# 
   314     019B                     	;# 
   315     019B                     	;# 
   316     019C                     	;# 
   317     019C                     	;# 
   318     019D                     	;# 
   319     019E                     	;# 
   320     019F                     	;# 
   321     020D                     	;# 
   322     0210                     	;# 
   323     0211                     	;# 
   324     0212                     	;# 
   325     0213                     	;# 
   326     0214                     	;# 
   327     0215                     	;# 
   328     0215                     	;# 
   329     0216                     	;# 
   330     0217                     	;# 
   331     0291                     	;# 
   332     0291                     	;# 
   333     0292                     	;# 
   334     0293                     	;# 
   335     0294                     	;# 
   336     0295                     	;# 
   337     0295                     	;# 
   338     0296                     	;# 
   339     0298                     	;# 
   340     0298                     	;# 
   341     0299                     	;# 
   342     029A                     	;# 
   343     029B                     	;# 
   344     029C                     	;# 
   345     029C                     	;# 
   346     029D                     	;# 
   347     029E                     	;# 
   348     029F                     	;# 
   349     0311                     	;# 
   350     0311                     	;# 
   351     0312                     	;# 
   352     0313                     	;# 
   353     0314                     	;# 
   354     0315                     	;# 
   355     0315                     	;# 
   356     0316                     	;# 
   357     0318                     	;# 
   358     0318                     	;# 
   359     0319                     	;# 
   360     031A                     	;# 
   361     031C                     	;# 
   362     031C                     	;# 
   363     031D                     	;# 
   364     031E                     	;# 
   365     0394                     	;# 
   366     0395                     	;# 
   367     0396                     	;# 
   368     0415                     	;# 
   369     0416                     	;# 
   370     0417                     	;# 
   371     041C                     	;# 
   372     041D                     	;# 
   373     041E                     	;# 
   374     0791                     	;# 
   375     0792                     	;# 
   376     0793                     	;# 
   377     0794                     	;# 
   378     0795                     	;# 
   379     0798                     	;# 
   380     0799                     	;# 
   381     079A                     	;# 
   382     07A0                     	;# 
   383     07A1                     	;# 
   384     07A2                     	;# 
   385     07A3                     	;# 
   386     07A4                     	;# 
   387     07A5                     	;# 
   388     07A6                     	;# 
   389     07A7                     	;# 
   390     07A8                     	;# 
   391     07A9                     	;# 
   392     07AA                     	;# 
   393     07AB                     	;# 
   394     0FE4                     	;# 
   395     0FE5                     	;# 
   396     0FE6                     	;# 
   397     0FE7                     	;# 
   398     0FE8                     	;# 
   399     0FE9                     	;# 
   400     0FEA                     	;# 
   401     0FEB                     	;# 
   402     0FED                     	;# 
   403     0FEE                     	;# 
   404     0FEF                     	;# 
   405     0000                     	;# 
   406     0001                     	;# 
   407     0002                     	;# 
   408     0003                     	;# 
   409     0004                     	;# 
   410     0005                     	;# 
   411     0006                     	;# 
   412     0007                     	;# 
   413     0008                     	;# 
   414     0009                     	;# 
   415     000A                     	;# 
   416     000B                     	;# 
   417     000C                     	;# 
   418     000D                     	;# 
   419     000E                     	;# 
   420     000F                     	;# 
   421     0010                     	;# 
   422     0011                     	;# 
   423     0012                     	;# 
   424     0013                     	;# 
   425     0015                     	;# 
   426     0016                     	;# 
   427     0016                     	;# 
   428     0017                     	;# 
   429     0018                     	;# 
   430     0019                     	;# 
   431     001A                     	;# 
   432     001B                     	;# 
   433     001C                     	;# 
   434     001E                     	;# 
   435     001F                     	;# 
   436     008C                     	;# 
   437     008D                     	;# 
   438     008E                     	;# 
   439     008F                     	;# 
   440     0090                     	;# 
   441     0091                     	;# 
   442     0092                     	;# 
   443     0093                     	;# 
   444     0095                     	;# 
   445     0096                     	;# 
   446     0097                     	;# 
   447     0098                     	;# 
   448     0099                     	;# 
   449     009A                     	;# 
   450     009B                     	;# 
   451     009B                     	;# 
   452     009C                     	;# 
   453     009D                     	;# 
   454     009E                     	;# 
   455     010C                     	;# 
   456     010D                     	;# 
   457     010E                     	;# 
   458     010F                     	;# 
   459     0110                     	;# 
   460     0111                     	;# 
   461     0112                     	;# 
   462     0113                     	;# 
   463     0114                     	;# 
   464     0115                     	;# 
   465     0116                     	;# 
   466     0117                     	;# 
   467     0118                     	;# 
   468     0119                     	;# 
   469     011A                     	;# 
   470     011B                     	;# 
   471     011D                     	;# 
   472     018C                     	;# 
   473     018D                     	;# 
   474     018F                     	;# 
   475     0190                     	;# 
   476     0191                     	;# 
   477     0191                     	;# 
   478     0192                     	;# 
   479     0193                     	;# 
   480     0193                     	;# 
   481     0193                     	;# 
   482     0194                     	;# 
   483     0195                     	;# 
   484     0196                     	;# 
   485     0199                     	;# 
   486     019A                     	;# 
   487     019B                     	;# 
   488     019B                     	;# 
   489     019B                     	;# 
   490     019B                     	;# 
   491     019C                     	;# 
   492     019C                     	;# 
   493     019D                     	;# 
   494     019E                     	;# 
   495     019F                     	;# 
   496     020D                     	;# 
   497     0210                     	;# 
   498     0211                     	;# 
   499     0212                     	;# 
   500     0213                     	;# 
   501     0214                     	;# 
   502     0215                     	;# 
   503     0215                     	;# 
   504     0216                     	;# 
   505     0217                     	;# 
   506     0291                     	;# 
   507     0291                     	;# 
   508     0292                     	;# 
   509     0293                     	;# 
   510     0294                     	;# 
   511     0295                     	;# 
   512     0295                     	;# 
   513     0296                     	;# 
   514     0298                     	;# 
   515     0298                     	;# 
   516     0299                     	;# 
   517     029A                     	;# 
   518     029B                     	;# 
   519     029C                     	;# 
   520     029C                     	;# 
   521     029D                     	;# 
   522     029E                     	;# 
   523     029F                     	;# 
   524     0311                     	;# 
   525     0311                     	;# 
   526     0312                     	;# 
   527     0313                     	;# 
   528     0314                     	;# 
   529     0315                     	;# 
   530     0315                     	;# 
   531     0316                     	;# 
   532     0318                     	;# 
   533     0318                     	;# 
   534     0319                     	;# 
   535     031A                     	;# 
   536     031C                     	;# 
   537     031C                     	;# 
   538     031D                     	;# 
   539     031E                     	;# 
   540     0394                     	;# 
   541     0395                     	;# 
   542     0396                     	;# 
   543     0415                     	;# 
   544     0416                     	;# 
   545     0417                     	;# 
   546     041C                     	;# 
   547     041D                     	;# 
   548     041E                     	;# 
   549     0791                     	;# 
   550     0792                     	;# 
   551     0793                     	;# 
   552     0794                     	;# 
   553     0795                     	;# 
   554     0798                     	;# 
   555     0799                     	;# 
   556     079A                     	;# 
   557     07A0                     	;# 
   558     07A1                     	;# 
   559     07A2                     	;# 
   560     07A3                     	;# 
   561     07A4                     	;# 
   562     07A5                     	;# 
   563     07A6                     	;# 
   564     07A7                     	;# 
   565     07A8                     	;# 
   566     07A9                     	;# 
   567     07AA                     	;# 
   568     07AB                     	;# 
   569     0FE4                     	;# 
   570     0FE5                     	;# 
   571     0FE6                     	;# 
   572     0FE7                     	;# 
   573     0FE8                     	;# 
   574     0FE9                     	;# 
   575     0FEA                     	;# 
   576     0FEB                     	;# 
   577     0FED                     	;# 
   578     0FEE                     	;# 
   579     0FEF                     	;# 
   580     0000                     	;# 
   581     0001                     	;# 
   582     0002                     	;# 
   583     0003                     	;# 
   584     0004                     	;# 
   585     0005                     	;# 
   586     0006                     	;# 
   587     0007                     	;# 
   588     0008                     	;# 
   589     0009                     	;# 
   590     000A                     	;# 
   591     000B                     	;# 
   592     000C                     	;# 
   593     000D                     	;# 
   594     000E                     	;# 
   595     000F                     	;# 
   596     0010                     	;# 
   597     0011                     	;# 
   598     0012                     	;# 
   599     0013                     	;# 
   600     0015                     	;# 
   601     0016                     	;# 
   602     0016                     	;# 
   603     0017                     	;# 
   604     0018                     	;# 
   605     0019                     	;# 
   606     001A                     	;# 
   607     001B                     	;# 
   608     001C                     	;# 
   609     001E                     	;# 
   610     001F                     	;# 
   611     008C                     	;# 
   612     008D                     	;# 
   613     008E                     	;# 
   614     008F                     	;# 
   615     0090                     	;# 
   616     0091                     	;# 
   617     0092                     	;# 
   618     0093                     	;# 
   619     0095                     	;# 
   620     0096                     	;# 
   621     0097                     	;# 
   622     0098                     	;# 
   623     0099                     	;# 
   624     009A                     	;# 
   625     009B                     	;# 
   626     009B                     	;# 
   627     009C                     	;# 
   628     009D                     	;# 
   629     009E                     	;# 
   630     010C                     	;# 
   631     010D                     	;# 
   632     010E                     	;# 
   633     010F                     	;# 
   634     0110                     	;# 
   635     0111                     	;# 
   636     0112                     	;# 
   637     0113                     	;# 
   638     0114                     	;# 
   639     0115                     	;# 
   640     0116                     	;# 
   641     0117                     	;# 
   642     0118                     	;# 
   643     0119                     	;# 
   644     011A                     	;# 
   645     011B                     	;# 
   646     011D                     	;# 
   647     018C                     	;# 
   648     018D                     	;# 
   649     018F                     	;# 
   650     0190                     	;# 
   651     0191                     	;# 
   652     0191                     	;# 
   653     0192                     	;# 
   654     0193                     	;# 
   655     0193                     	;# 
   656     0193                     	;# 
   657     0194                     	;# 
   658     0195                     	;# 
   659     0196                     	;# 
   660     0199                     	;# 
   661     019A                     	;# 
   662     019B                     	;# 
   663     019B                     	;# 
   664     019B                     	;# 
   665     019B                     	;# 
   666     019C                     	;# 
   667     019C                     	;# 
   668     019D                     	;# 
   669     019E                     	;# 
   670     019F                     	;# 
   671     020D                     	;# 
   672     0210                     	;# 
   673     0211                     	;# 
   674     0212                     	;# 
   675     0213                     	;# 
   676     0214                     	;# 
   677     0215                     	;# 
   678     0215                     	;# 
   679     0216                     	;# 
   680     0217                     	;# 
   681     0291                     	;# 
   682     0291                     	;# 
   683     0292                     	;# 
   684     0293                     	;# 
   685     0294                     	;# 
   686     0295                     	;# 
   687     0295                     	;# 
   688     0296                     	;# 
   689     0298                     	;# 
   690     0298                     	;# 
   691     0299                     	;# 
   692     029A                     	;# 
   693     029B                     	;# 
   694     029C                     	;# 
   695     029C                     	;# 
   696     029D                     	;# 
   697     029E                     	;# 
   698     029F                     	;# 
   699     0311                     	;# 
   700     0311                     	;# 
   701     0312                     	;# 
   702     0313                     	;# 
   703     0314                     	;# 
   704     0315                     	;# 
   705     0315                     	;# 
   706     0316                     	;# 
   707     0318                     	;# 
   708     0318                     	;# 
   709     0319                     	;# 
   710     031A                     	;# 
   711     031C                     	;# 
   712     031C                     	;# 
   713     031D                     	;# 
   714     031E                     	;# 
   715     0394                     	;# 
   716     0395                     	;# 
   717     0396                     	;# 
   718     0415                     	;# 
   719     0416                     	;# 
   720     0417                     	;# 
   721     041C                     	;# 
   722     041D                     	;# 
   723     041E                     	;# 
   724     0791                     	;# 
   725     0792                     	;# 
   726     0793                     	;# 
   727     0794                     	;# 
   728     0795                     	;# 
   729     0798                     	;# 
   730     0799                     	;# 
   731     079A                     	;# 
   732     07A0                     	;# 
   733     07A1                     	;# 
   734     07A2                     	;# 
   735     07A3                     	;# 
   736     07A4                     	;# 
   737     07A5                     	;# 
   738     07A6                     	;# 
   739     07A7                     	;# 
   740     07A8                     	;# 
   741     07A9                     	;# 
   742     07AA                     	;# 
   743     07AB                     	;# 
   744     0FE4                     	;# 
   745     0FE5                     	;# 
   746     0FE6                     	;# 
   747     0FE7                     	;# 
   748     0FE8                     	;# 
   749     0FE9                     	;# 
   750     0FEA                     	;# 
   751     0FEB                     	;# 
   752     0FED                     	;# 
   753     0FEE                     	;# 
   754     0FEF                     	;# 
   755     008F                     _TRISDbits	set	143
   756     010F                     _LATDbits	set	271
   757     018F                     _ANSELDbits	set	399
   758                           
   759                           	psect	stringtext1
   760     0800                     __pstringtext1:
   761     0800                     STR_1:
   762     0800  3430               	retlw	48	;'0'
   763     0801  3431               	retlw	49	;'1'
   764     0802  3432               	retlw	50	;'2'
   765     0803  3433               	retlw	51	;'3'
   766     0804  3434               	retlw	52	;'4'
   767     0805  3435               	retlw	53	;'5'
   768     0806  3436               	retlw	54	;'6'
   769     0807  3437               	retlw	55	;'7'
   770     0808  3438               	retlw	56	;'8'
   771     0809  3439               	retlw	57	;'9'
   772     080A  3430               	retlw	48	;'0'
   773     080B  3431               	retlw	49	;'1'
   774     080C  3432               	retlw	50	;'2'
   775     080D  3433               	retlw	51	;'3'
   776     080E  3434               	retlw	52	;'4'
   777     080F  3435               	retlw	53	;'5'
   778     0810  3436               	retlw	54	;'6'
   779     0811  3437               	retlw	55	;'7'
   780     0812  3438               	retlw	56	;'8'
   781     0813  3439               	retlw	57	;'9'
   782     0814  3400               	retlw	0
   783                           
   784                           	psect	stringtext2
   785     0815                     __pstringtext2:
   786     0815                     STR_2:
   787     0815  3453               	retlw	83	;'S'
   788     0816  3441               	retlw	65	;'A'
   789     0817  3450               	retlw	80	;'P'
   790     0818  344F               	retlw	79	;'O'
   791     0819  3420               	retlw	32	;' '
   792     081A  3448               	retlw	72	;'H'
   793     081B  3470               	retlw	112	;'p'
   794     081C  3400               	retlw	0
   795                           
   796                           	psect	stringtext3
   797     0000                     __pstringtext3:
   798                           
   799                           	psect	cinit
   800     07FD                     start_initialization:	
   801                           ; #config settings
   802                           
   803     07FD                     __initialization:
   804     07FD                     end_of_initialization:	
   805                           ;End of C runtime variable initialization code
   806                           
   807     07FD                     __end_of__initialization:
   808     07FD  0020               	movlb	0
   809     07FE  3187  2F10         	ljmp	_main	;jump to C main() function
   810                           
   811                           	psect	cstackCOMMON
   812     0070                     __pcstackCOMMON:
   813     0070                     ?_LCD_init:
   814     0070                     ?_LCD_Cmd:	
   815                           ; 1 bytes @ 0x0
   816                           
   817     0070                     ?_main:	
   818                           ; 1 bytes @ 0x0
   819                           
   820     0070                     ?_Load_Cmd:	
   821                           ; 1 bytes @ 0x0
   822                           
   823     0070                     ??_Load_Cmd:	
   824                           ; 1 bytes @ 0x0
   825                           
   826     0070                     ?_Load_Data:	
   827                           ; 1 bytes @ 0x0
   828                           
   829     0070                     ??_Load_Data:	
   830                           ; 1 bytes @ 0x0
   831                           
   832     0070                     ?_LCD_Write_Cp:	
   833                           ; 1 bytes @ 0x0
   834                           
   835     0070                     Load_Cmd@data:	
   836                           ; 1 bytes @ 0x0
   837                           
   838     0070                     Load_Data@data:	
   839                           ; 1 bytes @ 0x0
   840                           
   841                           
   842                           ; 1 bytes @ 0x0
   843     0070                     	ds	1
   844     0071                     ??_LCD_init:
   845     0071                     ??_LCD_Cmd:	
   846                           ; 1 bytes @ 0x1
   847                           
   848     0071                     ??_LCD_Write_Cp:	
   849                           ; 1 bytes @ 0x1
   850                           
   851                           
   852                           ; 1 bytes @ 0x1
   853     0071                     	ds	1
   854     0072                     LCD_Write_Cp@NibbleH:
   855     0072                     LCD_Cmd@NibbleH:	
   856                           ; 1 bytes @ 0x2
   857                           
   858                           
   859                           ; 1 bytes @ 0x2
   860     0072                     	ds	1
   861     0073                     LCD_Write_Cp@NibbleL:
   862     0073                     LCD_Cmd@NibbleL:	
   863                           ; 1 bytes @ 0x3
   864                           
   865                           
   866                           ; 1 bytes @ 0x3
   867     0073                     	ds	1
   868     0074                     LCD_Write_Cp@letra:
   869     0074                     LCD_Cmd@cmd:	
   870                           ; 1 bytes @ 0x4
   871                           
   872                           
   873                           ; 1 bytes @ 0x4
   874     0074                     	ds	1
   875     0075                     ?_LCD_Write_Text_Cp:
   876     0075                     ?_LCD_Set_Cursor:	
   877                           ; 1 bytes @ 0x5
   878                           
   879     0075                     LCD_Set_Cursor@col:	
   880                           ; 1 bytes @ 0x5
   881                           
   882     0075                     LCD_Write_Text_Cp@text:	
   883                           ; 1 bytes @ 0x5
   884                           
   885                           
   886                           ; 2 bytes @ 0x5
   887     0075                     	ds	1
   888     0076                     ??_LCD_Set_Cursor:
   889                           
   890                           ; 1 bytes @ 0x6
   891     0076                     	ds	1
   892     0077                     ??_LCD_Write_Text_Cp:
   893                           
   894                           ; 1 bytes @ 0x7
   895     0077                     	ds	1
   896     0078                     LCD_Set_Cursor@fila:
   897                           
   898                           ; 1 bytes @ 0x8
   899     0078                     	ds	1
   900     0079                     LCD_Set_Cursor@pos:
   901                           
   902                           ; 1 bytes @ 0x9
   903     0079                     	ds	1
   904     007A                     ?_LCD_Write_Text:
   905     007A                     LCD_Write_Text@col:	
   906                           ; 1 bytes @ 0xA
   907                           
   908                           
   909                           ; 1 bytes @ 0xA
   910     007A                     	ds	1
   911     007B                     LCD_Write_Text@text:
   912                           
   913                           ; 2 bytes @ 0xB
   914     007B                     	ds	2
   915     007D                     ??_LCD_Write_Text:
   916     007D                     LCD_Write_Text@fila:	
   917                           ; 1 bytes @ 0xD
   918                           
   919                           
   920                           ; 1 bytes @ 0xD
   921     007D                     	ds	1
   922     007E                     ??_main:
   923                           
   924                           	psect	maintext
   925     0710                     __pmaintext:	
   926                           ; 1 bytes @ 0xE
   927 ;;
   928 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   929 ;;
   930 ;; *************** function _main *****************
   931 ;; Defined at:
   932 ;;		line 5 in file "main.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;		None
   935 ;; Auto vars:     Size  Location     Type
   936 ;;		None
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      void 
   939 ;; Registers used:
   940 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   941 ;; Tracked objects:
   942 ;;		On entry : B1F/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   950 ;;Total ram usage:        0 bytes
   951 ;; Hardware stack levels required when called: 4
   952 ;; This function calls:
   953 ;;		_LCD_Write_Text
   954 ;;		_LCD_Write_Text_Cp
   955 ;;		_LCD_init
   956 ;; This function is called by:
   957 ;;		Startup code after reset
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961     0710                     _main:	
   962                           ;psect for function _main
   963                           
   964     0710                     l858:	
   965                           ;incstack = 0
   966                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   967                           
   968                           
   969                           ;main.c: 6:     LCD_init();
   970     0710  3187  27A6  3187   	fcall	_LCD_init
   971     0713                     l860:
   972                           
   973                           ;main.c: 7:     LCD_Write_Text_Cp("01234567890123456789");
   974     0713  3000               	movlw	low (STR_1| (0+32768))
   975     0714  00F5               	movwf	LCD_Write_Text_Cp@text
   976     0715  3088               	movlw	high (STR_1| (0+32768))
   977     0716  00F6               	movwf	LCD_Write_Text_Cp@text+1
   978     0717  3186  26F9  3187   	fcall	_LCD_Write_Text_Cp
   979     071A                     l862:
   980                           
   981                           ;main.c: 8:     LCD_Write_Text(3, 8, "SAPO Hp");
   982     071A  3008               	movlw	8
   983     071B  00FA               	movwf	LCD_Write_Text@col
   984     071C  3015               	movlw	low (STR_2| (0+32768))
   985     071D  00FB               	movwf	LCD_Write_Text@text
   986     071E  3088               	movlw	high (STR_2| (0+32768))
   987     071F  00FC               	movwf	LCD_Write_Text@text+1
   988     0720  3003               	movlw	3
   989     0721  3186  26C0  3187   	fcall	_LCD_Write_Text
   990     0724                     l11:	
   991                           ;main.c: 9:     while(1){
   992                           
   993     0724                     l12:	
   994                           ;main.c: 11:     }
   995                           
   996     0724  2F24               	goto	l11
   997     0725  3180  2802         	ljmp	start
   998     0727                     __end_of_main:
   999                           
  1000                           	psect	text1
  1001     07A6                     __ptext1:	
  1002 ;; *************** function _LCD_init *****************
  1003 ;; Defined at:
  1004 ;;		line 38 in file "LCD_LIB.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;		None
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;		None
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		wreg, status,2, status,0, pclath, cstack
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1020 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1021 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1022 ;;Total ram usage:        1 bytes
  1023 ;; Hardware stack levels used: 1
  1024 ;; Hardware stack levels required when called: 1
  1025 ;; This function calls:
  1026 ;;		_Load_Cmd
  1027 ;; This function is called by:
  1028 ;;		_main
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032     07A6                     _LCD_init:	
  1033                           ;psect for function _LCD_init
  1034                           
  1035     07A6                     l768:	
  1036                           ;incstack = 0
  1037                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  1038                           
  1039                           
  1040                           ;LCD_LIB.c: 40:     TRISDbits.TRISD0 = 0;
  1041     07A6  0021               	movlb	1	; select bank1
  1042     07A7  100F               	bcf	15,0	;volatile
  1043                           
  1044                           ;LCD_LIB.c: 41:     TRISDbits.TRISD1 = 0;
  1045     07A8  108F               	bcf	15,1	;volatile
  1046                           
  1047                           ;LCD_LIB.c: 42:     TRISDbits.TRISD4 = 0;
  1048     07A9  120F               	bcf	15,4	;volatile
  1049                           
  1050                           ;LCD_LIB.c: 43:     TRISDbits.TRISD5 = 0;
  1051     07AA  128F               	bcf	15,5	;volatile
  1052                           
  1053                           ;LCD_LIB.c: 44:     TRISDbits.TRISD6 = 0;
  1054     07AB  130F               	bcf	15,6	;volatile
  1055                           
  1056                           ;LCD_LIB.c: 45:     TRISDbits.TRISD7 = 0;
  1057     07AC  138F               	bcf	15,7	;volatile
  1058                           
  1059                           ;LCD_LIB.c: 48:     LATDbits.LATD1 = 0;
  1060     07AD  0022               	movlb	2	; select bank2
  1061     07AE  108F               	bcf	15,1	;volatile
  1062                           
  1063                           ;LCD_LIB.c: 49:     LATDbits.LATD4 = 0;
  1064     07AF  120F               	bcf	15,4	;volatile
  1065                           
  1066                           ;LCD_LIB.c: 50:     LATDbits.LATD5 = 0;
  1067     07B0  128F               	bcf	15,5	;volatile
  1068                           
  1069                           ;LCD_LIB.c: 51:     LATDbits.LATD6 = 0;
  1070     07B1  130F               	bcf	15,6	;volatile
  1071                           
  1072                           ;LCD_LIB.c: 52:     LATDbits.LATD7 = 0;
  1073     07B2  138F               	bcf	15,7	;volatile
  1074                           
  1075                           ;LCD_LIB.c: 55:     ANSELDbits.ANSD0 = 0;
  1076     07B3  0023               	movlb	3	; select bank3
  1077     07B4  100F               	bcf	15,0	;volatile
  1078                           
  1079                           ;LCD_LIB.c: 56:     ANSELDbits.ANSD1 = 0;
  1080     07B5  108F               	bcf	15,1	;volatile
  1081                           
  1082                           ;LCD_LIB.c: 57:     ANSELDbits.ANSD4 = 0;
  1083     07B6  120F               	bcf	15,4	;volatile
  1084                           
  1085                           ;LCD_LIB.c: 58:     ANSELDbits.ANSD5 = 0;
  1086     07B7  128F               	bcf	15,5	;volatile
  1087                           
  1088                           ;LCD_LIB.c: 59:     ANSELDbits.ANSD6 = 0;
  1089     07B8  130F               	bcf	15,6	;volatile
  1090                           
  1091                           ;LCD_LIB.c: 60:     ANSELDbits.ANSD7 = 0;
  1092     07B9  138F               	bcf	15,7	;volatile
  1093     07BA                     l770:
  1094                           
  1095                           ;LCD_LIB.c: 62:     _delay((unsigned long)((15)*(20000000UL/4000.0)));
  1096     07BA  3062               	movlw	98
  1097     07BB  00F1               	movwf	??_LCD_init
  1098     07BC  3066               	movlw	102
  1099     07BD                     u137:
  1100     07BD  0B89               	decfsz	9,f
  1101     07BE  2FBD               	goto	u137
  1102     07BF  0BF1               	decfsz	??_LCD_init,f
  1103     07C0  2FBD               	goto	u137
  1104     07C1                     l772:
  1105                           
  1106                           ;LCD_LIB.c: 63:     Load_Cmd(0x03);
  1107     07C1  3003               	movlw	3
  1108     07C2  3187  2727  3187   	fcall	_Load_Cmd
  1109     07C5                     l774:
  1110                           
  1111                           ;LCD_LIB.c: 64:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
  1112     07C5  3021               	movlw	33
  1113     07C6  00F1               	movwf	??_LCD_init
  1114     07C7  3076               	movlw	118
  1115     07C8                     u147:
  1116     07C8  0B89               	decfsz	9,f
  1117     07C9  2FC8               	goto	u147
  1118     07CA  0BF1               	decfsz	??_LCD_init,f
  1119     07CB  2FC8               	goto	u147
  1120     07CC  3200               	nop2
  1121                           
  1122                           ;LCD_LIB.c: 65:     Load_Cmd(0x03);
  1123     07CD  3003               	movlw	3
  1124     07CE  3187  2727  3187   	fcall	_Load_Cmd
  1125     07D1                     l776:
  1126                           
  1127                           ;LCD_LIB.c: 66:     _delay((unsigned long)((100)*(20000000UL/4000000.0)));
  1128     07D1  30A6               	movlw	166
  1129     07D2                     u157:
  1130     07D2  0B89               	decfsz	9,f
  1131     07D3  2FD2               	goto	u157
  1132     07D4  3200               	nop2
  1133     07D5                     l778:
  1134                           
  1135                           ;LCD_LIB.c: 67:     Load_Cmd(0x03);
  1136     07D5  3003               	movlw	3
  1137     07D6  3187  2727  3187   	fcall	_Load_Cmd
  1138     07D9                     l780:
  1139                           
  1140                           ;LCD_LIB.c: 68:     Load_Cmd(0x02);
  1141     07D9  3002               	movlw	2
  1142     07DA  3187  2727  3187   	fcall	_Load_Cmd
  1143     07DD                     l782:
  1144                           
  1145                           ;LCD_LIB.c: 70:     Load_Cmd(0x02);
  1146     07DD  3002               	movlw	2
  1147     07DE  3187  2727  3187   	fcall	_Load_Cmd
  1148     07E1                     l784:
  1149                           
  1150                           ;LCD_LIB.c: 71:     Load_Cmd(0x08);
  1151     07E1  3008               	movlw	8
  1152     07E2  3187  2727  3187   	fcall	_Load_Cmd
  1153     07E5                     l786:
  1154                           
  1155                           ;LCD_LIB.c: 73:     Load_Cmd(0x00);
  1156     07E5  3000               	movlw	0
  1157     07E6  3187  2727  3187   	fcall	_Load_Cmd
  1158     07E9                     l788:
  1159                           
  1160                           ;LCD_LIB.c: 74:     Load_Cmd(0x0F);
  1161     07E9  300F               	movlw	15
  1162     07EA  3187  2727  3187   	fcall	_Load_Cmd
  1163     07ED                     l790:
  1164                           
  1165                           ;LCD_LIB.c: 76:     Load_Cmd(0x00);
  1166     07ED  3000               	movlw	0
  1167     07EE  3187  2727  3187   	fcall	_Load_Cmd
  1168     07F1                     l792:
  1169                           
  1170                           ;LCD_LIB.c: 77:     Load_Cmd(0x01);
  1171     07F1  3001               	movlw	1
  1172     07F2  3187  2727  3187   	fcall	_Load_Cmd
  1173     07F5                     l794:
  1174                           
  1175                           ;LCD_LIB.c: 78:     _delay((unsigned long)((2)*(20000000UL/4000.0)));
  1176     07F5  300D               	movlw	13
  1177     07F6  00F1               	movwf	??_LCD_init
  1178     07F7  30FC               	movlw	252
  1179     07F8                     u167:
  1180     07F8  0B89               	decfsz	9,f
  1181     07F9  2FF8               	goto	u167
  1182     07FA  0BF1               	decfsz	??_LCD_init,f
  1183     07FB  2FF8               	goto	u167
  1184     07FC                     l49:
  1185     07FC  0008               	return
  1186     07FD                     __end_of_LCD_init:
  1187                           
  1188                           	psect	text2
  1189     06C0                     __ptext2:	
  1190 ;; *************** function _LCD_Write_Text *****************
  1191 ;; Defined at:
  1192 ;;		line 108 in file "LCD_LIB.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;  fila            1    wreg     unsigned char 
  1195 ;;  col             1   10[COMMON] unsigned char 
  1196 ;;  text            2   11[COMMON] PTR unsigned char 
  1197 ;;		 -> STR_2(8), 
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;  fila            1   13[COMMON] unsigned char 
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      void 
  1202 ;; Registers used:
  1203 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1209 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1210 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1212 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1213 ;;Total ram usage:        4 bytes
  1214 ;; Hardware stack levels used: 1
  1215 ;; Hardware stack levels required when called: 3
  1216 ;; This function calls:
  1217 ;;		_LCD_Set_Cursor
  1218 ;;		_LCD_Write_Text_Cp
  1219 ;; This function is called by:
  1220 ;;		_main
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224     06C0                     _LCD_Write_Text:	
  1225                           ;psect for function _LCD_Write_Text
  1226                           
  1227                           
  1228                           ;incstack = 0
  1229                           ; Regs used in _LCD_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1230                           ;LCD_Write_Text@fila stored from wreg
  1231     06C0  00FD               	movwf	LCD_Write_Text@fila
  1232     06C1                     l856:
  1233                           
  1234                           ;LCD_LIB.c: 109:     LCD_Set_Cursor(fila, col);
  1235     06C1  087A               	movf	LCD_Write_Text@col,w
  1236     06C2  00F5               	movwf	LCD_Set_Cursor@col
  1237     06C3  087D               	movf	LCD_Write_Text@fila,w
  1238     06C4  3187  2779  3186   	fcall	_LCD_Set_Cursor
  1239                           
  1240                           ;LCD_LIB.c: 110:     LCD_Write_Text_Cp(text);
  1241     06C7  087C               	movf	LCD_Write_Text@text+1,w
  1242     06C8  00F6               	movwf	LCD_Write_Text_Cp@text+1
  1243     06C9  087B               	movf	LCD_Write_Text@text,w
  1244     06CA  00F5               	movwf	LCD_Write_Text_Cp@text
  1245     06CB  3186  26F9  3186   	fcall	_LCD_Write_Text_Cp
  1246     06CE                     l73:
  1247     06CE  0008               	return
  1248     06CF                     __end_of_LCD_Write_Text:
  1249                           
  1250                           	psect	text3
  1251     06F9                     __ptext3:	
  1252 ;; *************** function _LCD_Write_Text_Cp *****************
  1253 ;; Defined at:
  1254 ;;		line 88 in file "LCD_LIB.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;  text            2    5[COMMON] PTR unsigned char 
  1257 ;;		 -> STR_2(8), STR_1(21), 
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;		None
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      void 
  1262 ;; Registers used:
  1263 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1269 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1271 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1272 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1273 ;;Total ram usage:        3 bytes
  1274 ;; Hardware stack levels used: 1
  1275 ;; Hardware stack levels required when called: 2
  1276 ;; This function calls:
  1277 ;;		_LCD_Write_Cp
  1278 ;; This function is called by:
  1279 ;;		_main
  1280 ;;		_LCD_Write_Text
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284     06F9                     _LCD_Write_Text_Cp:	
  1285                           ;psect for function _LCD_Write_Text_Cp
  1286                           
  1287     06F9                     l828:	
  1288                           ;incstack = 0
  1289                           ; Regs used in _LCD_Write_Text_Cp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1290                           
  1291                           
  1292                           ;LCD_LIB.c: 89:     while(*text){
  1293     06F9  2F06               	goto	l834
  1294     06FA                     l830:
  1295                           
  1296                           ;LCD_LIB.c: 90:         LCD_Write_Cp(*text);
  1297     06FA  0875               	movf	LCD_Write_Text_Cp@text,w
  1298     06FB  0084               	movwf	4
  1299     06FC  0876               	movf	LCD_Write_Text_Cp@text+1,w
  1300     06FD  0085               	movwf	5
  1301     06FE  0800               	movf	0,w	;code access
  1302     06FF  3186  26E4  3186   	fcall	_LCD_Write_Cp
  1303     0702                     l832:
  1304                           
  1305                           ;LCD_LIB.c: 91:         text++;
  1306     0702  3001               	movlw	1
  1307     0703  07F5               	addwf	LCD_Write_Text_Cp@text,f
  1308     0704  3000               	movlw	0
  1309     0705  3DF6               	addwfc	LCD_Write_Text_Cp@text+1,f
  1310     0706                     l834:
  1311                           
  1312                           ;LCD_LIB.c: 89:     while(*text){
  1313     0706  0875               	movf	LCD_Write_Text_Cp@text,w
  1314     0707  0084               	movwf	4
  1315     0708  0876               	movf	LCD_Write_Text_Cp@text+1,w
  1316     0709  0085               	movwf	5
  1317     070A  0012               	moviw fsr0++
  1318     070B  1D03               	btfss	3,2
  1319     070C  2F0E               	goto	u121
  1320     070D  2F0F               	goto	u120
  1321     070E                     u121:
  1322     070E  2EFA               	goto	l830
  1323     070F                     u120:
  1324     070F                     l58:
  1325     070F  0008               	return
  1326     0710                     __end_of_LCD_Write_Text_Cp:
  1327                           
  1328                           	psect	text4
  1329     06E4                     __ptext4:	
  1330 ;; *************** function _LCD_Write_Cp *****************
  1331 ;; Defined at:
  1332 ;;		line 81 in file "LCD_LIB.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;  letra           1    wreg     unsigned char 
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;  letra           1    4[COMMON] unsigned char 
  1337 ;;  NibbleL         1    3[COMMON] unsigned char 
  1338 ;;  NibbleH         1    2[COMMON] unsigned char 
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  1    wreg      void 
  1341 ;; Registers used:
  1342 ;;		wreg, status,2, status,0, pclath, cstack
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1349 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1350 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1351 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1352 ;;Total ram usage:        4 bytes
  1353 ;; Hardware stack levels used: 1
  1354 ;; Hardware stack levels required when called: 1
  1355 ;; This function calls:
  1356 ;;		_Load_Data
  1357 ;; This function is called by:
  1358 ;;		_LCD_Write_Text_Cp
  1359 ;;		_LCD_Write
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363     06E4                     _LCD_Write_Cp:	
  1364                           ;psect for function _LCD_Write_Cp
  1365                           
  1366                           
  1367                           ;incstack = 0
  1368                           ; Regs used in _LCD_Write_Cp: [wreg+status,2+status,0+pclath+cstack]
  1369                           ;LCD_Write_Cp@letra stored from wreg
  1370     06E4  00F4               	movwf	LCD_Write_Cp@letra
  1371     06E5                     l724:
  1372                           
  1373                           ;LCD_LIB.c: 82:     char NibbleH, NibbleL;;LCD_LIB.c: 83:     NibbleH = letra>>4;
  1374     06E5  0874               	movf	LCD_Write_Cp@letra,w
  1375     06E6  00F1               	movwf	??_LCD_Write_Cp
  1376     06E7  3004               	movlw	4
  1377     06E8                     u95:
  1378     06E8  36F1               	lsrf	??_LCD_Write_Cp,f
  1379     06E9  0B89               	decfsz	9,f
  1380     06EA  2EE8               	goto	u95
  1381     06EB  0871               	movf	??_LCD_Write_Cp,w
  1382     06EC  00F2               	movwf	LCD_Write_Cp@NibbleH
  1383     06ED                     l726:
  1384                           
  1385                           ;LCD_LIB.c: 84:     NibbleL = letra & 0x0F;
  1386     06ED  0874               	movf	LCD_Write_Cp@letra,w
  1387     06EE  390F               	andlw	15
  1388     06EF  00F3               	movwf	LCD_Write_Cp@NibbleL
  1389     06F0                     l728:
  1390                           
  1391                           ;LCD_LIB.c: 85:     Load_Data(NibbleH);
  1392     06F0  0872               	movf	LCD_Write_Cp@NibbleH,w
  1393     06F1  3187  2750  3186   	fcall	_Load_Data
  1394     06F4                     l730:
  1395                           
  1396                           ;LCD_LIB.c: 86:     Load_Data(NibbleL);
  1397     06F4  0873               	movf	LCD_Write_Cp@NibbleL,w
  1398     06F5  3187  2750  3186   	fcall	_Load_Data
  1399     06F8                     l52:
  1400     06F8  0008               	return
  1401     06F9                     __end_of_LCD_Write_Cp:
  1402                           
  1403                           	psect	text5
  1404     0750                     __ptext5:	
  1405 ;; *************** function _Load_Data *****************
  1406 ;; Defined at:
  1407 ;;		line 23 in file "LCD_LIB.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;  data            1    wreg     unsigned char 
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;  data            1    0[COMMON] unsigned char 
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  1    wreg      void 
  1414 ;; Registers used:
  1415 ;;		wreg
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1422 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1424 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1425 ;;Total ram usage:        1 bytes
  1426 ;; Hardware stack levels used: 1
  1427 ;; This function calls:
  1428 ;;		Nothing
  1429 ;; This function is called by:
  1430 ;;		_LCD_Write_Cp
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434     0750                     _Load_Data:	
  1435                           ;psect for function _Load_Data
  1436                           
  1437                           
  1438                           ;incstack = 0
  1439                           ; Regs used in _Load_Data: [wreg]
  1440                           ;Load_Data@data stored from wreg
  1441     0750  00F0               	movwf	Load_Data@data
  1442     0751                     l704:
  1443                           
  1444                           ;LCD_LIB.c: 24:     LATDbits.LATD0 = 1;
  1445     0751  0022               	movlb	2	; select bank2
  1446     0752  140F               	bsf	15,0	;volatile
  1447     0753                     l706:
  1448                           
  1449                           ;LCD_LIB.c: 26:     if((data & 1) == 0) LATDbits.LATD4 = 0; else LATDbits.LATD4 = 1;
  1450     0753  1870               	btfsc	Load_Data@data,0
  1451     0754  2F56               	goto	u51
  1452     0755  2F57               	goto	u50
  1453     0756                     u51:
  1454     0756  2F59               	goto	l38
  1455     0757                     u50:
  1456     0757                     l708:
  1457     0757  120F               	bcf	15,4	;volatile
  1458     0758  2F5A               	goto	l710
  1459     0759                     l38:
  1460     0759  160F               	bsf	15,4	;volatile
  1461     075A                     l710:
  1462                           
  1463                           ;LCD_LIB.c: 27:     if((data & 2) == 0) LATDbits.LATD5 = 0; else LATDbits.LATD5 = 1;
  1464     075A  18F0               	btfsc	Load_Data@data,1
  1465     075B  2F5D               	goto	u61
  1466     075C  2F5E               	goto	u60
  1467     075D                     u61:
  1468     075D  2F60               	goto	l40
  1469     075E                     u60:
  1470     075E                     l712:
  1471     075E  128F               	bcf	15,5	;volatile
  1472     075F  2F61               	goto	l714
  1473     0760                     l40:
  1474     0760  168F               	bsf	15,5	;volatile
  1475     0761                     l714:
  1476                           
  1477                           ;LCD_LIB.c: 28:     if((data & 4) == 0) LATDbits.LATD6 = 0; else LATDbits.LATD6 = 1;
  1478     0761  1970               	btfsc	Load_Data@data,2
  1479     0762  2F64               	goto	u71
  1480     0763  2F65               	goto	u70
  1481     0764                     u71:
  1482     0764  2F67               	goto	l42
  1483     0765                     u70:
  1484     0765                     l716:
  1485     0765  130F               	bcf	15,6	;volatile
  1486     0766  2F68               	goto	l718
  1487     0767                     l42:
  1488     0767  170F               	bsf	15,6	;volatile
  1489     0768                     l718:
  1490                           
  1491                           ;LCD_LIB.c: 29:     if((data & 8) == 0) LATDbits.LATD7 = 0; else LATDbits.LATD7 = 1;
  1492     0768  19F0               	btfsc	Load_Data@data,3
  1493     0769  2F6B               	goto	u81
  1494     076A  2F6C               	goto	u80
  1495     076B                     u81:
  1496     076B  2F6E               	goto	l44
  1497     076C                     u80:
  1498     076C                     l720:
  1499     076C  138F               	bcf	15,7	;volatile
  1500     076D  2F6F               	goto	l45
  1501     076E                     l44:
  1502     076E  178F               	bsf	15,7	;volatile
  1503     076F                     l45:
  1504                           
  1505                           ;LCD_LIB.c: 31:     LATDbits.LATD1 = 0;
  1506     076F  108F               	bcf	15,1	;volatile
  1507                           
  1508                           ;LCD_LIB.c: 32:     LATDbits.LATD1 = 1;
  1509     0770  148F               	bsf	15,1	;volatile
  1510                           
  1511                           ;LCD_LIB.c: 33:     LATDbits.LATD1 = 0;
  1512     0771  108F               	bcf	15,1	;volatile
  1513     0772                     l722:
  1514                           
  1515                           ;LCD_LIB.c: 35:     _delay((unsigned long)((300)*(20000000UL/4000000.0)));
  1516     0772  30D6               	movlw	214
  1517     0773                     u177:
  1518     0773  3200               	nop2
  1519     0774  3200               	nop2
  1520     0775  0B89               	decfsz	9,f
  1521     0776  2F73               	goto	u177
  1522     0777  3200               	nop2
  1523     0778                     l46:
  1524     0778  0008               	return
  1525     0779                     __end_of_Load_Data:
  1526                           
  1527                           	psect	text6
  1528     0779                     __ptext6:	
  1529 ;; *************** function _LCD_Set_Cursor *****************
  1530 ;; Defined at:
  1531 ;;		line 94 in file "LCD_LIB.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;  fila            1    wreg     unsigned char 
  1534 ;;  col             1    5[COMMON] unsigned char 
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;  fila            1    8[COMMON] unsigned char 
  1537 ;;  pos             1    9[COMMON] unsigned char 
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      void 
  1540 ;; Registers used:
  1541 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1547 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1548 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1549 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1550 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1551 ;;Total ram usage:        5 bytes
  1552 ;; Hardware stack levels used: 1
  1553 ;; Hardware stack levels required when called: 2
  1554 ;; This function calls:
  1555 ;;		_LCD_Cmd
  1556 ;; This function is called by:
  1557 ;;		_LCD_Write_Text
  1558 ;;		_LCD_Write
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562     0779                     _LCD_Set_Cursor:	
  1563                           ;psect for function _LCD_Set_Cursor
  1564                           
  1565                           
  1566                           ;incstack = 0
  1567                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1568                           ;LCD_Set_Cursor@fila stored from wreg
  1569     0779  00F8               	movwf	LCD_Set_Cursor@fila
  1570     077A                     l836:
  1571                           
  1572                           ;LCD_LIB.c: 95:     char pos;;LCD_LIB.c: 96:     switch(fila){
  1573     077A  2F8B               	goto	l848
  1574     077B                     l838:
  1575     077B  0875               	movf	LCD_Set_Cursor@col,w
  1576     077C  3E7F               	addlw	127
  1577     077D  00F9               	movwf	LCD_Set_Cursor@pos
  1578     077E  2FA1               	goto	l850
  1579     077F                     l840:
  1580     077F  0875               	movf	LCD_Set_Cursor@col,w
  1581     0780  3EBF               	addlw	191
  1582     0781  00F9               	movwf	LCD_Set_Cursor@pos
  1583     0782  2FA1               	goto	l850
  1584     0783                     l842:
  1585     0783  0875               	movf	LCD_Set_Cursor@col,w
  1586     0784  3E93               	addlw	147
  1587     0785  00F9               	movwf	LCD_Set_Cursor@pos
  1588     0786  2FA1               	goto	l850
  1589     0787                     l844:
  1590     0787  0875               	movf	LCD_Set_Cursor@col,w
  1591     0788  3ED3               	addlw	211
  1592     0789  00F9               	movwf	LCD_Set_Cursor@pos
  1593     078A  2FA1               	goto	l850
  1594     078B                     l848:
  1595     078B  0878               	movf	LCD_Set_Cursor@fila,w
  1596     078C  00F6               	movwf	??_LCD_Set_Cursor
  1597     078D  01F7               	clrf	??_LCD_Set_Cursor+1
  1598                           
  1599                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1600                           ; Switch size 1, requested type "simple"
  1601                           ; Number of cases is 1, Range of values is 0 to 0
  1602                           ; switch strategies available:
  1603                           ; Name         Instructions Cycles
  1604                           ; simple_byte            4     3 (average)
  1605                           ; direct_byte            8     6 (fixed)
  1606                           ; jumptable            260     6 (fixed)
  1607                           ;	Chosen strategy is simple_byte
  1608     078E  0877               	movf	??_LCD_Set_Cursor+1,w
  1609     078F  3A00               	xorlw	0	; case 0
  1610     0790  1903               	skipnz
  1611     0791  2F93               	goto	l888
  1612     0792  2FA1               	goto	l850
  1613     0793                     l888:
  1614                           
  1615                           ; Switch size 1, requested type "simple"
  1616                           ; Number of cases is 4, Range of values is 1 to 4
  1617                           ; switch strategies available:
  1618                           ; Name         Instructions Cycles
  1619                           ; simple_byte           13     7 (average)
  1620                           ; direct_byte           17     9 (fixed)
  1621                           ; jumptable            263     9 (fixed)
  1622                           ;	Chosen strategy is simple_byte
  1623     0793  0876               	movf	??_LCD_Set_Cursor,w
  1624     0794  3A01               	xorlw	1	; case 1
  1625     0795  1903               	skipnz
  1626     0796  2F7B               	goto	l838
  1627     0797  3A03               	xorlw	3	; case 2
  1628     0798  1903               	skipnz
  1629     0799  2F7F               	goto	l840
  1630     079A  3A01               	xorlw	1	; case 3
  1631     079B  1903               	skipnz
  1632     079C  2F83               	goto	l842
  1633     079D  3A07               	xorlw	7	; case 4
  1634     079E  1903               	skipnz
  1635     079F  2F87               	goto	l844
  1636     07A0  2FA1               	goto	l850
  1637     07A1                     l850:
  1638                           
  1639                           ;LCD_LIB.c: 102:     LCD_Cmd(pos);
  1640     07A1  0879               	movf	LCD_Set_Cursor@pos,w
  1641     07A2  3186  26CF  3187   	fcall	_LCD_Cmd
  1642     07A5                     l67:
  1643     07A5  0008               	return
  1644     07A6                     __end_of_LCD_Set_Cursor:
  1645                           
  1646                           	psect	text7
  1647     06CF                     __ptext7:	
  1648 ;; *************** function _LCD_Cmd *****************
  1649 ;; Defined at:
  1650 ;;		line 112 in file "LCD_LIB.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;  cmd             1    wreg     unsigned char 
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;  cmd             1    4[COMMON] unsigned char 
  1655 ;;  NibbleL         1    3[COMMON] unsigned char 
  1656 ;;  NibbleH         1    2[COMMON] unsigned char 
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  1    wreg      void 
  1659 ;; Registers used:
  1660 ;;		wreg, status,2, status,0, pclath, cstack
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1667 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1668 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1669 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1670 ;;Total ram usage:        4 bytes
  1671 ;; Hardware stack levels used: 1
  1672 ;; Hardware stack levels required when called: 1
  1673 ;; This function calls:
  1674 ;;		_Load_Cmd
  1675 ;; This function is called by:
  1676 ;;		_LCD_Set_Cursor
  1677 ;; This function uses a non-reentrant model
  1678 ;;
  1679                           
  1680     06CF                     _LCD_Cmd:	
  1681                           ;psect for function _LCD_Cmd
  1682                           
  1683                           
  1684                           ;incstack = 0
  1685                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1686                           ;LCD_Cmd@cmd stored from wreg
  1687     06CF  00F4               	movwf	LCD_Cmd@cmd
  1688     06D0                     l732:
  1689                           
  1690                           ;LCD_LIB.c: 113:     char NibbleH, NibbleL;;LCD_LIB.c: 114:     NibbleH = cmd>>4;
  1691     06D0  0874               	movf	LCD_Cmd@cmd,w
  1692     06D1  00F1               	movwf	??_LCD_Cmd
  1693     06D2  3004               	movlw	4
  1694     06D3                     u105:
  1695     06D3  36F1               	lsrf	??_LCD_Cmd,f
  1696     06D4  0B89               	decfsz	9,f
  1697     06D5  2ED3               	goto	u105
  1698     06D6  0871               	movf	??_LCD_Cmd,w
  1699     06D7  00F2               	movwf	LCD_Cmd@NibbleH
  1700     06D8                     l734:
  1701                           
  1702                           ;LCD_LIB.c: 115:     NibbleL = cmd & 0x0F;
  1703     06D8  0874               	movf	LCD_Cmd@cmd,w
  1704     06D9  390F               	andlw	15
  1705     06DA  00F3               	movwf	LCD_Cmd@NibbleL
  1706     06DB                     l736:
  1707                           
  1708                           ;LCD_LIB.c: 116:     Load_Cmd(NibbleH);
  1709     06DB  0872               	movf	LCD_Cmd@NibbleH,w
  1710     06DC  3187  2727  3186   	fcall	_Load_Cmd
  1711     06DF                     l738:
  1712                           
  1713                           ;LCD_LIB.c: 117:     Load_Cmd(NibbleL);
  1714     06DF  0873               	movf	LCD_Cmd@NibbleL,w
  1715     06E0  3187  2727  3186   	fcall	_Load_Cmd
  1716     06E3                     l76:
  1717     06E3  0008               	return
  1718     06E4                     __end_of_LCD_Cmd:
  1719                           
  1720                           	psect	text8
  1721     0727                     __ptext8:	
  1722 ;; *************** function _Load_Cmd *****************
  1723 ;; Defined at:
  1724 ;;		line 8 in file "LCD_LIB.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;  data            1    wreg     unsigned char 
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;  data            1    0[COMMON] unsigned char 
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  1    wreg      void 
  1731 ;; Registers used:
  1732 ;;		wreg
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1739 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1741 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1742 ;;Total ram usage:        1 bytes
  1743 ;; Hardware stack levels used: 1
  1744 ;; This function calls:
  1745 ;;		Nothing
  1746 ;; This function is called by:
  1747 ;;		_LCD_init
  1748 ;;		_LCD_Cmd
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752     0727                     _Load_Cmd:	
  1753                           ;psect for function _Load_Cmd
  1754                           
  1755                           
  1756                           ;incstack = 0
  1757                           ; Regs used in _Load_Cmd: [wreg]
  1758                           ;Load_Cmd@data stored from wreg
  1759     0727  00F0               	movwf	Load_Cmd@data
  1760     0728                     l684:
  1761                           
  1762                           ;LCD_LIB.c: 9:     LATDbits.LATD0 = 0;
  1763     0728  0022               	movlb	2	; select bank2
  1764     0729  100F               	bcf	15,0	;volatile
  1765     072A                     l686:
  1766                           
  1767                           ;LCD_LIB.c: 11:     if((data & 1) == 0) LATDbits.LATD4 = 0; else LATDbits.LATD4 = 1;
  1768     072A  1870               	btfsc	Load_Cmd@data,0
  1769     072B  2F2D               	goto	u11
  1770     072C  2F2E               	goto	u10
  1771     072D                     u11:
  1772     072D  2F30               	goto	l27
  1773     072E                     u10:
  1774     072E                     l688:
  1775     072E  120F               	bcf	15,4	;volatile
  1776     072F  2F31               	goto	l690
  1777     0730                     l27:
  1778     0730  160F               	bsf	15,4	;volatile
  1779     0731                     l690:
  1780                           
  1781                           ;LCD_LIB.c: 12:     if((data & 2) == 0) LATDbits.LATD5 = 0; else LATDbits.LATD5 = 1;
  1782     0731  18F0               	btfsc	Load_Cmd@data,1
  1783     0732  2F34               	goto	u21
  1784     0733  2F35               	goto	u20
  1785     0734                     u21:
  1786     0734  2F37               	goto	l29
  1787     0735                     u20:
  1788     0735                     l692:
  1789     0735  128F               	bcf	15,5	;volatile
  1790     0736  2F38               	goto	l694
  1791     0737                     l29:
  1792     0737  168F               	bsf	15,5	;volatile
  1793     0738                     l694:
  1794                           
  1795                           ;LCD_LIB.c: 13:     if((data & 4) == 0) LATDbits.LATD6 = 0; else LATDbits.LATD6 = 1;
  1796     0738  1970               	btfsc	Load_Cmd@data,2
  1797     0739  2F3B               	goto	u31
  1798     073A  2F3C               	goto	u30
  1799     073B                     u31:
  1800     073B  2F3E               	goto	l31
  1801     073C                     u30:
  1802     073C                     l696:
  1803     073C  130F               	bcf	15,6	;volatile
  1804     073D  2F3F               	goto	l698
  1805     073E                     l31:
  1806     073E  170F               	bsf	15,6	;volatile
  1807     073F                     l698:
  1808                           
  1809                           ;LCD_LIB.c: 14:     if((data & 8) == 0) LATDbits.LATD7 = 0; else LATDbits.LATD7 = 1;
  1810     073F  19F0               	btfsc	Load_Cmd@data,3
  1811     0740  2F42               	goto	u41
  1812     0741  2F43               	goto	u40
  1813     0742                     u41:
  1814     0742  2F45               	goto	l33
  1815     0743                     u40:
  1816     0743                     l700:
  1817     0743  138F               	bcf	15,7	;volatile
  1818     0744  2F46               	goto	l34
  1819     0745                     l33:
  1820     0745  178F               	bsf	15,7	;volatile
  1821     0746                     l34:
  1822                           
  1823                           ;LCD_LIB.c: 16:     LATDbits.LATD1 = 0;
  1824     0746  108F               	bcf	15,1	;volatile
  1825                           
  1826                           ;LCD_LIB.c: 17:     LATDbits.LATD1 = 1;
  1827     0747  148F               	bsf	15,1	;volatile
  1828                           
  1829                           ;LCD_LIB.c: 18:     LATDbits.LATD1 = 0;
  1830     0748  108F               	bcf	15,1	;volatile
  1831     0749                     l702:
  1832                           
  1833                           ;LCD_LIB.c: 20:     _delay((unsigned long)((300)*(20000000UL/4000000.0)));
  1834     0749  30D6               	movlw	214
  1835     074A                     u187:
  1836     074A  3200               	nop2
  1837     074B  3200               	nop2
  1838     074C  0B89               	decfsz	9,f
  1839     074D  2F4A               	goto	u187
  1840     074E  3200               	nop2
  1841     074F                     l35:
  1842     074F  0008               	return
  1843     0750                     __end_of_Load_Cmd:
  1844     007E                     btemp	set	126	;btemp
  1845     007E                     wtemp0	set	126
  1846                           
  1847                           	psect	config
  1848                           
  1849                           ;Config register CONFIG1 @ 0x8007
  1850                           ;	Oscillator Selection
  1851                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
  1852                           ;	Watchdog Timer Enable
  1853                           ;	WDTE = OFF, WDT disabled
  1854                           ;	Power-up Timer Enable
  1855                           ;	PWRTE = OFF, PWRT disabled
  1856                           ;	MCLR Pin Function Select
  1857                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  1858                           ;	Flash Program Memory Code Protection
  1859                           ;	CP = OFF, Program memory code protection is disabled
  1860                           ;	Data Memory Code Protection
  1861                           ;	CPD = OFF, Data memory code protection is disabled
  1862                           ;	Brown-out Reset Enable
  1863                           ;	BOREN = ON, Brown-out Reset enabled
  1864                           ;	Clock Out Enable
  1865                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1866                           ;	Internal/External Switchover
  1867                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1868                           ;	Fail-Safe Clock Monitor Enable
  1869                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1870     8007                     	org	32775
  1871     8007  3FE2               	dw	16354
  1872                           
  1873                           ;Config register CONFIG2 @ 0x8008
  1874                           ;	Flash Memory Self-Write Protection
  1875                           ;	WRT = OFF, Write protection off
  1876                           ;	Voltage Regulator Capacitor Enable
  1877                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  1878                           ;	PLL Enable
  1879                           ;	PLLEN = OFF, 4x PLL disabled
  1880                           ;	Stack Overflow/Underflow Reset Enable
  1881                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  1882                           ;	Brown-out Reset Voltage Selection
  1883                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  1884                           ;	Low-Voltage Programming Enable
  1885                           ;	LVP = ON, Low-voltage programming enabled
  1886     8008                     	org	32776
  1887     8008  3EFF               	dw	16127

Data Sizes:
    Strings     29
    Constant    0
    Data        0
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    LCD_Write_Text@text	PTR unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[8]), 

    LCD_Write_Text_Cp@text	PTR unsigned char  size(2) Largest target is 21
		 -> STR_2(CODE[8]), STR_1(CODE[21]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_Text
    _LCD_init->_Load_Cmd
    _LCD_Write_Text->_LCD_Set_Cursor
    _LCD_Write_Text_Cp->_LCD_Write_Cp
    _LCD_Write_Cp->_Load_Data
    _LCD_Set_Cursor->_LCD_Cmd
    _LCD_Cmd->_Load_Cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1320
                     _LCD_Write_Text
                  _LCD_Write_Text_Cp
                           _LCD_init
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             1     1      0      60
                                              1 COMMON     1     1      0
                           _Load_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Text                                       4     1      3     943
                                             10 COMMON     4     1      3
                     _LCD_Set_Cursor
                  _LCD_Write_Text_Cp
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_Text_Cp                                    3     1      2     317
                                              5 COMMON     3     1      2
                       _LCD_Write_Cp
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Cp                                         4     4      0     120
                                              1 COMMON     4     4      0
                          _Load_Data
 ---------------------------------------------------------------------------------
 (3) _Load_Data                                            1     1      0      60
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       5     4      1     408
                                              5 COMMON     5     4      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              4     4      0     120
                                              1 COMMON     4     4      0
                           _Load_Cmd
 ---------------------------------------------------------------------------------
 (2) _Load_Cmd                                             1     1      0      60
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Write_Text
     _LCD_Set_Cursor
       _LCD_Cmd
         _Load_Cmd
     _LCD_Write_Text_Cp
       _LCD_Write_Cp
         _Load_Data
   _LCD_Write_Text_Cp
   _LCD_init
     _Load_Cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Sep 01 10:06:16 2023

                       l11 0724                         l12 0724                         l31 073E  
                       l40 0760                         l33 0745                         l34 0746  
                       l42 0767                         l35 074F                         l27 0730  
                       l44 076E                         l52 06F8                         l29 0737  
                       l45 076F                         l46 0778                         l38 0759  
                       l73 06CE                         l49 07FC                         l58 070F  
                       l67 07A5                         l76 06E3                         u10 072E  
                       u11 072D                         u20 0735                         u21 0734  
                       u30 073C                         u31 073B                         u40 0743  
                       u41 0742                         u50 0757                         u51 0756  
                       u60 075E                         u61 075D                         u70 0765  
                       u71 0764                         u80 076C                         u81 076B  
                       u95 06E8                        l700 0743                        l702 0749  
                      l710 075A                        l720 076C                        l712 075E  
                      l704 0751                        l722 0772                        l714 0761  
                      l706 0753                        l730 06F4                        l732 06D0  
                      l716 0765                        l708 0757                        l724 06E5  
                      l734 06D8                        l718 0768                        l726 06ED  
                      l830 06FA                        l736 06DB                        l840 077F  
                      l728 06F0                        l832 0702                        l690 0731  
                      l738 06DF                        l842 0783                        l850 07A1  
                      l834 0706                        l770 07BA                        l692 0735  
                      l684 0728                        l844 0787                        l836 077A  
                      l828 06F9                        l780 07D9                        l772 07C1  
                      l860 0713                        l694 0738                        l686 072A  
                      l838 077B                        l790 07ED                        l782 07DD  
                      l774 07C5                        l862 071A                        l696 073C  
                      l688 072E                        l848 078B                        l856 06C1  
                      l792 07F1                        l784 07E1                        l776 07D1  
                      l768 07A6                        l698 073F                        l794 07F5  
                      l786 07E5                        l778 07D5                        l858 0710  
                      l788 07E9                        l888 0793                        u120 070F  
                      u105 06D3                        u121 070E                        u137 07BD  
                      u147 07C8                        u157 07D2                        u167 07F8  
                      u177 0773                        u187 074A                        wreg 0009  
          __end_of_LCD_Cmd 06E4             _LCD_Set_Cursor 0779                       STR_1 0800  
                     STR_2 0815                       _main 0710                       fsr0h 0005  
                     indf0 0000                       fsr0l 0004                       btemp 007E  
                     start 0002              ?_LCD_Write_Cp 0070           __end_of_LCD_init 07FD  
                    ?_main 0070          _LCD_Write_Text_Cp 06F9         ?_LCD_Write_Text_Cp 0075  
   __end_of_LCD_Set_Cursor 07A6        ??_LCD_Write_Text_Cp 0077                      status 0003  
                    wtemp0 007E             ??_LCD_Write_Cp 0071            __initialization 07FD  
           _LCD_Write_Text 06C0               __end_of_main 0727           __end_of_Load_Cmd 0750  
__end_of_LCD_Write_Text_Cp 0710               Load_Cmd@data 0070                     ??_main 007E  
                ??_LCD_Cmd 0071            ?_LCD_Set_Cursor 0075     __end_of_LCD_Write_Text 06CF  
  __end_of__initialization 07FD                  ?_LCD_init 0070            ?_LCD_Write_Text 007A  
           __pcstackCOMMON 0070             LCD_Cmd@NibbleH 0072             LCD_Cmd@NibbleL 0073  
        __end_of_Load_Data 0779       __end_of_LCD_Write_Cp 06F9              Load_Data@data 0070  
                ?_Load_Cmd 0070                 ??_LCD_init 0071                 __pmaintext 0710  
                  _LCD_Cmd 06CF                 ??_Load_Cmd 0070           ??_LCD_Set_Cursor 0076  
                  __ptext1 07A6                    __ptext2 06C0                    __ptext3 06F9  
                  __ptext4 06E4                    __ptext5 0750                    __ptext6 0779  
                  __ptext7 06CF                    __ptext8 0727       end_of_initialization 07FD  
        LCD_Write_Cp@letra 0074          LCD_Write_Text@col 007A                  _TRISDbits 008F  
         ??_LCD_Write_Text 007D                 LCD_Cmd@cmd 0074               _LCD_Write_Cp 06E4  
      start_initialization 07FD                  _Load_Data 0750                   ?_LCD_Cmd 0070  
               ?_Load_Data 0070                  ___latbits 0003                   _LATDbits 010F  
                 _LCD_init 07A6        LCD_Write_Cp@NibbleH 0072        LCD_Write_Cp@NibbleL 0073  
              ??_Load_Data 0070                   _Load_Cmd 0727                 _ANSELDbits 018F  
       LCD_Set_Cursor@fila 0078              __pstringtext1 0800              __pstringtext2 0815  
            __pstringtext3 0000          LCD_Set_Cursor@col 0075          LCD_Set_Cursor@pos 0079  
    LCD_Write_Text_Cp@text 0075         LCD_Write_Text@fila 007D         LCD_Write_Text@text 007B  
